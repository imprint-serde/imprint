name: Benchmark CI

on:
  pull_request:
    branches: [main]

permissions:
  issues: write
  pull-requests: write

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install critcmp
        run: cargo install critcmp

      - name: Run comparison script
        run: |
          ./scripts/ci_bench.sh

      - name: Post or update benchmark comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const marker = '<!-- benchmark-comment -->';
            const body = marker + '\n' + fs.readFileSync('benchmark-report.md', 'utf8');

            // Get all comments on the PR
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // Look for a comment containing our marker
            const existing = comments.find(comment =>
              comment.body.includes(marker) &&
              comment.user.login === context.actor // Ensure it's ours
            );

            if (existing) {
              // Update the existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body,
              });
              console.log('âœ… Updated existing benchmark comment');
            } else {
              // Create a new comment
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body,
              });
              console.log('ðŸ†• Created new benchmark comment');
            }
